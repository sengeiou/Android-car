import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.tgf.kcwc"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 7
        versionName "2.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        flavorDimensions "tgf"
    }

    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"//越大越好
        //incremental true
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    buildTypes {
        release {
            minifyEnabled true

            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {

            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }


    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //def outputFile = output.outputFile
            if (variant.buildType.zipAlignEnabled) {
               // if (outputFile != null && outputFile.name.endsWith('.apk')) {

                    // apk_渠道名-版本号-版本名称-编译时间.apk
                    def fileName = "com.tgf.kcwc-${variant.productFlavors[0].name}-v${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}.apk"
                    outputFileName =fileName;
               // }
            }

        }
    }

    productFlavors {
        tgf {}
        //qihu360 {} // 360手机助手
        //yingyongbao {} // 腾讯应用宝
        // wandoujia {} // 豌豆荚
//        baidu {} // 百度手机助手
//        miui {} // 小米
//        flyme {} // 魅族
//        lenovo {} // 联想-乐商店
//        oppo {} // Oppo-可可软件商店
//        huawei {} // 华为
//        vivo {} // vivo
//        hiapk {} // 安卓市场
//        sj91 {} // 91手机助手
//        sogou {} // 搜狗手机市场
//        sohu {} // 搜狐应用中心

//        taobao {} // 淘宝手机助手
//        gfan {} // 机锋
//        appchina {} // 应用汇
//        mumayi {} // 木蚂蚁
//        wangyi163 {} // 网易应用
//        nduoa {} // N多市场
//        mm10086 {} // MM商城-中国移动
//        wostore {} // WO商店
//        youyi {} // 优异
//        uc {} // UC+开发平台
//        anzhi {} // 安智市场
//        google {} // google play
//        amazon {} // 亚马逊

    }


    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

def releaseTime() {
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
    return simpleDateFormat.format(new Date());

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:+'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:design:+'

    //添加Retrofit依赖
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okio:okio:1.9.0'

    //添加RX依赖
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'
    compile 'io.reactivex:rxandroid:1.1.0'

    // compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    //compress image lib
    compile 'top.zibin:Luban:1.1.2'

    //添加相应json转换器 GSON/Moshi/Jackson/SimpleXML/ProtoBuf/Wire
    compile 'com.squareup.retrofit2:converter-jackson:2.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'

    // compile ' com.squareup.retrofit2:converter-moshi:2.0.0'

    //compile 'com.squareup.retrofit2:converter-simplexml:2.0.0'

    //compile 'com.squareup.retrofit2:converter-protobuf:2.0.0'

    //compile 'com.squareup.retrofit2:converter-wire:2.0.0'

    //添加fresco图片加载框架依赖
    compile 'com.facebook.fresco:fresco:0.12.0'
    compile project(':daogenerator')

    //添加greendao依赖框架
    compile 'org.greenrobot:greendao:2.2.1'

    //增加侧滑删除依赖
    compile 'com.baoyz.swipemenulistview:library:1.3.0'

    //兼容5.0以下
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.umeng.analytics:analytics:latest.integration'

    //添加变色状态栏依赖
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    //添加多类型列表依赖
    compile 'me.drakeet.multitype:multitype:2.3.0'

    //添加列表字母分组快速索引依赖
    compile 'com.github.mcxtzhang:SuspensionIndexBar:V1.0.0'

    //添加评星条依赖
    compile 'com.hedgehog.ratingbar:app:1.1.2'

    //放大缩小

    //compile 'com.commit451:PhotoView:1.2.4'

    //
    compile files('libs/httpmime-4.1.2.jar')

    //compile files('libs/zxing.jar')

    //微信支付SDK
    compile files('libs/libammsdk.jar')
    compile files('libs/AndroidPicker-1.4.3.jar')

    //Fast Json
    compile 'com.alibaba:fastjson:1.2.24'
    compile 'com.alibaba:fastjson:1.1.56.android'
    compile project(':imagepicker')

    //引入Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'cn.bingoogolapple:bga-badgeview:1.1.3@aar'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile project(':easeui')
    compile project(':redpacketlibrary')
    compile project(':bgarefreshlibrary')
    compile project(':sweetlibrary')
    compile 'com.facebook.fresco:animated-gif:0.12.0'

    //ZBar 、ZXing  依赖库
    compile 'me.dm7.barcodescanner:zxing:1.9'
    compile 'me.dm7.barcodescanner:zbar:1.9'
    compile 'com.belerweb:pinyin4j:2.5.1'

    //引入动态权限开源库
    compile 'com.yanzhenjie:permission:1.0.7'

    //增加侧滑删除依赖
    compile 'com.baoyz.swipemenulistview:library:1.3.0'
    compile files('libs/mta-sdk-1.6.2.jar')
    compile files('libs/open_sdk_r5788.jar')

    //新浪sdk
    compile 'com.sina.weibo.sdk:core:+:openDefaultRelease@aar'

    //支付Header、Footer的RecycleView
    compile 'com.songhang:smart-headerfooter-recyclerview:1.0.1'

    //环信
    compile 'com.parse:parse-android:1.13.1'

    //compile files('libs/alipaySdk-20170725.jar')
    compile project(':pickerview')
    implementation files('libs/UPPayAssistEx.jar')
    implementation files('libs/UPPayPluginExPro.jar')
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
}
